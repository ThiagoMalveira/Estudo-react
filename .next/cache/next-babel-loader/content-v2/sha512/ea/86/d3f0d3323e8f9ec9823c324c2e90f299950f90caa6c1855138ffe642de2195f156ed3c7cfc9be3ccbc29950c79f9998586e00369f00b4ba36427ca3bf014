{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thiago/www/Projeto/teste/src/components/Ingredients/index.tsx\";\nimport { api } from \"../../services/api\";\nexport default function Ingredients({\n  ingredients,\n  measure\n}) {\n  const All = [...ingredients, ...measure];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: ingredients.map((ingredients, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ingredients\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: measure.map((measure, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: measure\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const {\n    data\n  } = await api.get('/meals');\n  const paths = data.map(meals => {\n    return {\n      params: {\n        slug: meals.id\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/meals/${slug}`);\n  const allMeals = {\n    ingredients: data.ingredients,\n    measure: data.measure\n  };\n  return {\n    props: {\n      allMeals\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/thiago/www/Projeto/teste/src/components/Ingredients/index.tsx"],"names":["api","Ingredients","ingredients","measure","All","map","index","getStaticPaths","data","get","paths","meals","params","slug","id","fallback","getStaticProps","ctx","allMeals","props","revalidate"],"mappings":";;AACA,SAASA,GAAT,QAAoB,oBAApB;AAYA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAArB,EAA4D;AACvE,QAAMC,GAAG,GAAG,CAAC,GAAGF,WAAJ,EAAiB,GAAGC,OAApB,CAAZ;AAEA,sBACI;AAAA,4BACI;AAAA,gBACKD,WAAW,CAACG,GAAZ,CAAgB,CAACH,WAAD,EAAcI,KAAd,KAAwB;AACrC,4BACI;AAAA,iCACI;AAAA,sBACKJ;AADL,aAASI,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMF,OAPD;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,gBACKH,OAAO,CAACE,GAAR,CAAY,CAACF,OAAD,EAAUG,KAAV,KAAoB;AAC7B,4BACI;AAAA,iCACI;AAAA,sBACKH;AADL,aAASG,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMF,OAPD;AADL;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQ,QAAR,CAAvB;AAEA,QAAMC,KAAK,GAAGF,IAAI,CAACH,GAAL,CAASM,KAAK,IAAI;AAC5B,WAAO;AACHC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEF,KAAK,CAACG;AADN;AADL,KAAP;AAKH,GANa,CAAd;AAOA,SAAO;AACHJ,IAAAA,KADG;AAEHK,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CAdM;AAgBP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AACzD,QAAM;AAAEJ,IAAAA;AAAF,MAAWI,GAAG,CAACL,MAArB;AAEA,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAS,UAASI,IAAK,EAAvB,CAAvB;AAEA,QAAMK,QAAQ,GAAG;AACThB,IAAAA,WAAW,EAAEM,IAAI,CAACN,WADT;AAETC,IAAAA,OAAO,EAAEK,IAAI,CAACL;AAFL,GAAjB;AAMA,SAAO;AACHgB,IAAAA,KAAK,EAAE;AACHD,MAAAA;AADG,KADJ;AAIHE,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJnB,GAAP;AAMH,CAjBM","sourcesContent":["import { GetStaticProps, GetStaticPaths } from \"next\";\nimport { api } from \"../../services/api\";\n\ntype allMeals = {\n    ingredients: object,\n    measure: object\n}\n\ntype allIngredients = {\n    ingredients: allMeals[],\n    measure: allMeals[]\n}\n\nexport default function Ingredients({ingredients, measure}: allIngredients){\n    const All = [...ingredients, ...measure];\n\n    return (\n        <div>\n            <div>\n                {ingredients.map((ingredients, index) => {\n                    return (\n                        <ul>\n                            <li key={index}>\n                                {ingredients}\n                            </li>\n                        </ul>\n                )})}\n            </div>\n            <div>\n                {measure.map((measure, index) => {\n                    return (\n                        <ul>\n                            <li key={index}>\n                                {measure}\n                            </li>\n                        </ul>\n                )})}\n            </div>\n            \n        </div>\n    )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    const { data } = await api.get('/meals')\n\n    const paths = data.map(meals => {\n        return {\n            params: {\n              slug: meals.id\n            }\n        }\n    })\n    return {\n        paths,\n        fallback: 'blocking'\n    }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => { \n    const { slug } = ctx.params;\n\n    const { data } = await api.get(`/meals/${slug}`);\n\n    const allMeals = {\n            ingredients: data.ingredients,\n            measure: data.measure,\n        };\n\n\n    return {\n        props: {\n            allMeals\n        },\n        revalidate: 60 * 60 * 8,\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}